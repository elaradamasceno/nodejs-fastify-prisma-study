// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Event {
  id               String     @id @default(uuid()) //vai gerar um valor aleatório e unico para cada id
  title            String
  details          String? //opcional por isso ?
  slug             String     @unique //slug representa o titulo de forma mais amigavel
  maximumAttendees Int?       @map("maximum_attendees")
  attendees        Attendee[]

  @@map("events") //renomeando a tabela
}

model Attendee {
  id        Int      @id @default(autoincrement()) //@id esta setando como primaryKey
  name      String
  email     String
  createdAt DateTime @default(now()) @map("created_at") //ao criar o registro o campo é preenchido automaticamente com a data atual
  eventId   String   @map("event_id")

  event   Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  checkIn CheckIn? //nem todo participante vai fazer um check-in

  @@unique([eventId, email]) //cria uma chave de verificação unica entre 2 campos
  @@map("attendees")
}

model CheckIn {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")

  // Um unico participante pode realizar um checkin
  // E um checkin pode ser realizado apenas por um único participante
  //  relacionamento de 1 para 1
  // O relacionamento fica no checkin pq um participante pode existir sem checkin
  //  mas o checkin n faz sentido sem o particpante
  attendee   Attendee @relation(fields: [attendeeId], references: [id], onDelete: Cascade)
  attendeeId Int      @unique @map("attendee_id")

  @@map("check_ins")
}
